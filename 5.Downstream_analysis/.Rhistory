txdb <- TxDb.Hsapiens.UCSC.hg38.knownGene
library(org.Hs.eg.db)
dir_rna = dir(paste0(path_use,i,'/rna_snp'))
dir_atac = dir(paste0(path_use,i,'/atac_snp'))
dir.create(paste0(path_use,i,'/rna_enrich_kegg'))
dir.create(paste0(path_use,i,'/rna_enrich_go'))
dir.create(paste0(path_use,i,'/atac_enrich_kegg'))
dir.create(paste0(path_use,i,'/atac_enrich_go'))
for (j in dir_rna) {
snp_rna = read.delim(paste0(path_use,i,'/rna_snp/',j))
enrich_plot = plot_enrich(snp_rna$symbol)
name_disease = unlist(strsplit(j,'.txt'))
kegg_path = paste0(path_use,i,'/rna_enrich_kegg/',name_disease,'_kegg.svg')
go_path = paste0(path_use,i,'/rna_enrich_go/',name_disease,'_go.svg')
if (dim(enrich_plot$kegg)[1]>1) {
svg(filename = kegg_path, width = 4, height = 4)
print(dotplot(enrich_plot$kegg))
dev.off()
}
if (dim(enrich_plot$go)[1]>1) {
svg(filename = go_path, width = 4, height = 4)
print(dotplot(enrich_plot$go))
dev.off()
}
}
for (j in dir_atac) {
snp_atac = read.delim(paste0(path_use,i,'/atac_snp/',j))
snp_atac[,1] = paste0('chr',snp_atac[,1])
peaks = GenomicRanges::GRanges(paste0(snp_atac[,1],':',
snp_atac[,2],'-',
snp_atac[,3]))
peakAnno <- ChIPseeker::annotatePeak(peaks,
tssRegion = c(-3000, 3000),
TxDb = txdb, annoDb = 'org.Hs.eg.db')
enrich_plot = plot_enrich(peakAnno@anno$SYMBOL)
name_disease = unlist(strsplit(j,'.txt'))
kegg_path = paste0(path_use,i,'/atac_enrich_kegg/',name_disease,'_kegg.tiff')
go_path = paste0(path_use,i,'/atac_enrich_go/',name_disease,'_go.tiff')
if (dim(enrich_plot$kegg)[1]>1) {
svg(filename = kegg_path, width = 4, height = 4)
print(dotplot(enrich_plot$kegg))
dev.off()
}
if (dim(enrich_plot$go)[1]>1) {
svg(filename = go_path, width = 4, height = 4)
print(dotplot(enrich_plot$go))
dev.off()
}
}
}
### cell type specific grn
if (grn) {
print('plot grn!!')
dir.create(paste0(path_use,i,'/grn_cor02_fig'))
dir.create(paste0(path_use,i,'/grn_cor04_fig'))
grn02_path = dir(paste0(path_use,i,'/grn_cor02'))
grn04_path = dir(paste0(path_use,i,'/grn_cor04'))
for (j in grn02_path) {
grn_name = unlist(strsplit(j,'.txt'))
data = read.table(paste0(path_use,i,'/grn_cor02/',j),header = T)
data$type = ifelse(data$value>0,'positive','negative')
if (nrow(data)>=1) {
outpath = paste0(path_use,i,'/grn_cor02_fig/',grn_name,'.tiff')
tiff(filename = outpath, width = 15000, height = 12000, units = "px", res = 1200, compression = "lzw")
print(plot_grn_irena(data))
dev.off()
}
}
for (j in grn04_path) {
grn_name = unlist(strsplit(j,'.txt'))
data = read.table(paste0(path_use,i,'/grn_cor04/',j),header = T)
data$type = ifelse(data$value>0,'positive','negative')
if (nrow(data)>=1) {
outpath = paste0(path_use,i,'/grn_cor04_fig/',grn_name,'.tiff')
tiff(filename = outpath, width = 15000, height = 12000, units = "px", res = 1200, compression = "lzw")
print(plot_grn_irena(data))
dev.off()
}
}
}
}
}
plot_main(grn=F)
plot_main('E:\\DRCTdb\\ignore\\downstream_result',grn=F)
plot_main('E:\\DRCTdb\\ignore\\downstream_result/',grn=F)
plot_main('E:\\DRCTdb\\ignore\\downstream_result/',grn=F)
path_use=''E:\\DRCTdb\\ignore\\downstream_result/''
path_use='E:\\DRCTdb\\ignore\\downstream_result/'
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
txdb <- TxDb.Hsapiens.UCSC.hg38.knownGene
library(org.Hs.eg.db)
dir_rna = dir(paste0(path_use,i,'/rna_snp'))
dir_atac = dir(paste0(path_use,i,'/atac_snp'))
dir.create(paste0(path_use,i,'/rna_enrich_kegg'))
dir.create(paste0(path_use,i,'/rna_enrich_go'))
dir.create(paste0(path_use,i,'/atac_enrich_kegg'))
dir.create(paste0(path_use,i,'/atac_enrich_go'))
for (j in dir_rna) {
snp_rna = read.delim(paste0(path_use,i,'/rna_snp/',j))
enrich_plot = plot_enrich(snp_rna$symbol)
name_disease = unlist(strsplit(j,'.txt'))
kegg_path = paste0(path_use,i,'/rna_enrich_kegg/',name_disease,'_kegg.svg')
go_path = paste0(path_use,i,'/rna_enrich_go/',name_disease,'_go.svg')
if (dim(enrich_plot$kegg)[1]>1) {
svg(filename = kegg_path, width = 4, height = 4)
print(dotplot(enrich_plot$kegg))
dev.off()
}
if (dim(enrich_plot$go)[1]>1) {
svg(filename = go_path, width = 4, height = 4)
print(dotplot(enrich_plot$go))
dev.off()
}
}
snp_rna
snp_rna = read.delim(paste0(path_use,i,'/rna_snp/',j))
snp_rna = read.delim(paste0(path_use,i,'/rna_snp/',j))
dir.create(paste0(path_use,i,'/atac_enrich_go'))
path_use
dir_rna
dir_rna = dir(paste0(path_use,i,'/rna_snp'))
i=dir1[1]
dir1 = dir(path_use)
i=dir1[1]
dir_rna = dir(paste0(path_use,i,'/rna_snp'))
dir_atac = dir(paste0(path_use,i,'/atac_snp'))
dir.create(paste0(path_use,i,'/rna_enrich_kegg'))
dir.create(paste0(path_use,i,'/rna_enrich_go'))
dir.create(paste0(path_use,i,'/atac_enrich_kegg'))
dir.create(paste0(path_use,i,'/atac_enrich_go'))
j=dir_rna[1]
snp_rna = read.delim(paste0(path_use,i,'/rna_snp/',j))
enrich_plot = plot_enrich(snp_rna$symbol)
name_disease = unlist(strsplit(j,'.txt'))
enrich_plot = plot_enrich(snp_rna$symbol)
plot_enrich <- function(gene1){
library(clusterProfiler)
library(org.Hs.eg.db)
entrez_id <- bitr(gene1,
fromType = "SYMBOL",
toType = "ENTREZID",
OrgDb = org.Hs.eg.db)
gene_universe <- names(org.Hs.eg.db)
enrich_go <- enrichGO(gene = entrez_id$ENTREZID,
keyType = 'ENTREZID',
OrgDb = org.Hs.eg.db)
p_go = dotplot(enrich_go)
enrich_kegg <- enrichKEGG(gene = entrez_id$ENTREZID,
organism = 'hsa',use_internal_data = T)
p_kegg = dotplot(enrich_kegg)
list1 = list(enrich_go,enrich_kegg)
names(list1) = c('go','kegg')
return(list1)
}
plot_main <- function(path_use,enrich=T,grn=T){
dir1 = dir(path_use)
for (i in dir1) {
### kegg go plot
if (enrich) {
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
txdb <- TxDb.Hsapiens.UCSC.hg38.knownGene
library(org.Hs.eg.db)
dir_rna = dir(paste0(path_use,i,'/rna_snp'))
dir_atac = dir(paste0(path_use,i,'/atac_snp'))
dir.create(paste0(path_use,i,'/rna_enrich_kegg'))
dir.create(paste0(path_use,i,'/rna_enrich_go'))
dir.create(paste0(path_use,i,'/atac_enrich_kegg'))
dir.create(paste0(path_use,i,'/atac_enrich_go'))
for (j in dir_rna) {
snp_rna = read.delim(paste0(path_use,i,'/rna_snp/',j))
enrich_plot = plot_enrich(snp_rna$symbol)
name_disease = unlist(strsplit(j,'.txt'))
kegg_path = paste0(path_use,i,'/rna_enrich_kegg/',name_disease,'_kegg.svg')
go_path = paste0(path_use,i,'/rna_enrich_go/',name_disease,'_go.svg')
if (dim(enrich_plot$kegg)[1]>1) {
svg(filename = kegg_path, width = 4, height = 4)
print(dotplot(enrich_plot$kegg))
dev.off()
}
if (dim(enrich_plot$go)[1]>1) {
svg(filename = go_path, width = 4, height = 4)
print(dotplot(enrich_plot$go))
dev.off()
}
}
for (j in dir_atac) {
snp_atac = read.delim(paste0(path_use,i,'/atac_snp/',j))
snp_atac[,1] = paste0('chr',snp_atac[,1])
peaks = GenomicRanges::GRanges(paste0(snp_atac[,1],':',
snp_atac[,2],'-',
snp_atac[,3]))
peakAnno <- ChIPseeker::annotatePeak(peaks,
tssRegion = c(-3000, 3000),
TxDb = txdb, annoDb = 'org.Hs.eg.db')
enrich_plot = plot_enrich(peakAnno@anno$SYMBOL)
name_disease = unlist(strsplit(j,'.txt'))
kegg_path = paste0(path_use,i,'/atac_enrich_kegg/',name_disease,'_kegg.tiff')
go_path = paste0(path_use,i,'/atac_enrich_go/',name_disease,'_go.tiff')
if (dim(enrich_plot$kegg)[1]>1) {
svg(filename = kegg_path, width = 4, height = 4)
print(dotplot(enrich_plot$kegg))
dev.off()
}
if (dim(enrich_plot$go)[1]>1) {
svg(filename = go_path, width = 4, height = 4)
print(dotplot(enrich_plot$go))
dev.off()
}
}
}
### cell type specific grn
if (grn) {
print('plot grn!!')
dir.create(paste0(path_use,i,'/grn_cor02_fig'))
dir.create(paste0(path_use,i,'/grn_cor04_fig'))
grn02_path = dir(paste0(path_use,i,'/grn_cor02'))
grn04_path = dir(paste0(path_use,i,'/grn_cor04'))
for (j in grn02_path) {
grn_name = unlist(strsplit(j,'.txt'))
data = read.table(paste0(path_use,i,'/grn_cor02/',j),header = T)
data$type = ifelse(data$value>0,'positive','negative')
if (nrow(data)>=1) {
outpath = paste0(path_use,i,'/grn_cor02_fig/',grn_name,'.tiff')
tiff(filename = outpath, width = 15000, height = 12000, units = "px", res = 1200, compression = "lzw")
print(plot_grn_irena(data))
dev.off()
}
}
for (j in grn04_path) {
grn_name = unlist(strsplit(j,'.txt'))
data = read.table(paste0(path_use,i,'/grn_cor04/',j),header = T)
data$type = ifelse(data$value>0,'positive','negative')
if (nrow(data)>=1) {
outpath = paste0(path_use,i,'/grn_cor04_fig/',grn_name,'.tiff')
tiff(filename = outpath, width = 15000, height = 12000, units = "px", res = 1200, compression = "lzw")
print(plot_grn_irena(data))
dev.off()
}
}
}
}
}
plot_main(grn=F)
plot_main(path_use,grn=F)
plot_main <- function(path_use,enrich=T,grn=T){
dir1 = dir(path_use)
for (i in dir1) {
### kegg go plot
if (enrich) {
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
txdb <- TxDb.Hsapiens.UCSC.hg38.knownGene
library(org.Hs.eg.db)
dir_rna = dir(paste0(path_use,i,'/rna_snp'))
dir_atac = dir(paste0(path_use,i,'/atac_snp'))
dir.create(paste0(path_use,i,'/rna_enrich_kegg'))
dir.create(paste0(path_use,i,'/rna_enrich_go'))
dir.create(paste0(path_use,i,'/atac_enrich_kegg'))
dir.create(paste0(path_use,i,'/atac_enrich_go'))
for (j in dir_rna) {
snp_rna = read.delim(paste0(path_use,i,'/rna_snp/',j))
enrich_plot = plot_enrich(snp_rna$symbol)
name_disease = unlist(strsplit(j,'.txt'))
kegg_path = paste0(path_use,i,'/rna_enrich_kegg/',name_disease,'_kegg.svg')
go_path = paste0(path_use,i,'/rna_enrich_go/',name_disease,'_go.svg')
if (dim(enrich_plot$kegg)[1]>1) {
svg(filename = kegg_path, width = 8, height = 8)
print(dotplot(enrich_plot$kegg))
dev.off()
}
if (dim(enrich_plot$go)[1]>1) {
svg(filename = go_path, width = 8, height = 8)
print(dotplot(enrich_plot$go))
dev.off()
}
}
for (j in dir_atac) {
snp_atac = read.delim(paste0(path_use,i,'/atac_snp/',j))
snp_atac[,1] = paste0('chr',snp_atac[,1])
peaks = GenomicRanges::GRanges(paste0(snp_atac[,1],':',
snp_atac[,2],'-',
snp_atac[,3]))
peakAnno <- ChIPseeker::annotatePeak(peaks,
tssRegion = c(-3000, 3000),
TxDb = txdb, annoDb = 'org.Hs.eg.db')
enrich_plot = plot_enrich(peakAnno@anno$SYMBOL)
name_disease = unlist(strsplit(j,'.txt'))
kegg_path = paste0(path_use,i,'/atac_enrich_kegg/',name_disease,'_kegg.tiff')
go_path = paste0(path_use,i,'/atac_enrich_go/',name_disease,'_go.tiff')
if (dim(enrich_plot$kegg)[1]>1) {
svg(filename = kegg_path, width = 8, height = 8)
print(dotplot(enrich_plot$kegg))
dev.off()
}
if (dim(enrich_plot$go)[1]>1) {
svg(filename = go_path, width = 8, height = 8)
print(dotplot(enrich_plot$go))
dev.off()
}
}
}
### cell type specific grn
if (grn) {
print('plot grn!!')
dir.create(paste0(path_use,i,'/grn_cor02_fig'))
dir.create(paste0(path_use,i,'/grn_cor04_fig'))
grn02_path = dir(paste0(path_use,i,'/grn_cor02'))
grn04_path = dir(paste0(path_use,i,'/grn_cor04'))
for (j in grn02_path) {
grn_name = unlist(strsplit(j,'.txt'))
data = read.table(paste0(path_use,i,'/grn_cor02/',j),header = T)
data$type = ifelse(data$value>0,'positive','negative')
if (nrow(data)>=1) {
outpath = paste0(path_use,i,'/grn_cor02_fig/',grn_name,'.tiff')
tiff(filename = outpath, width = 15000, height = 12000, units = "px", res = 1200, compression = "lzw")
print(plot_grn_irena(data))
dev.off()
}
}
for (j in grn04_path) {
grn_name = unlist(strsplit(j,'.txt'))
data = read.table(paste0(path_use,i,'/grn_cor04/',j),header = T)
data$type = ifelse(data$value>0,'positive','negative')
if (nrow(data)>=1) {
outpath = paste0(path_use,i,'/grn_cor04_fig/',grn_name,'.tiff')
tiff(filename = outpath, width = 15000, height = 12000, units = "px", res = 1200, compression = "lzw")
print(plot_grn_irena(data))
dev.off()
}
}
}
}
}
plot_main(path_use,grn=F)
library(Seurat)
library(igraph)
library(GenomicRanges)
setwd('E:\\DRCTdb\\5.Downstream_analysis')
source('identify_region_motif.R')
source('overlap_gwas.R')
source('plot.R')
### path need to define
output_path = 'E:\\DRCTdb\\ignore\\downstream_result\\sample26\\'
rna_path = 'F:\\DRCTdb\\ignore\\scRNA-seq\\Sample16\\sample16_Bone_marrow_RNA_Healthy_35k_processed.Rds'
atac_path = 'E:\\DRCTdb\\ignore\\bed\\sample26/'
ldsc_path = "E:/DRCTdb/ignore/LDSC_results/sample26/pvalues.tsv"
#### db path
snp_path = 'E:\\public\\all_snp_info_gr.Rds'
disease_path = 'E:\\DRCTdb\\ignore\\LDSC_hg38\\summary_statistics\\Josh'
source('F:\\general_code\\run_cellchat.R')
### create output folder
dir.create(paste0(output_path))
dir.create(paste0(output_path,'grn_cor04'))
dir.create(paste0(output_path,'grn_cor02'))
dir.create(paste0(output_path,'rna_snp'))
dir.create(paste0(output_path,'atac_snp'))
dir.create(paste0(output_path,'ccc'))
###load data & define cell type use
rna = readRDS(rna_path)
atac = dir(atac_path)
atac_ct = unlist(strsplit(atac,'.bed.gz'))
ct_use = intersect(rna2@active.ident,atac_ct)
ct_use = intersect(rna@active.ident,atac_ct)
atac_path = 'E:\\DRCTdb\\ignore\\bed\\sample26/hg38/'
atac = dir(atac_path)
atac_ct = unlist(strsplit(atac,'.bed.gz'))
ct_use = intersect(rna@active.ident,atac_ct)
rna = rna2
atac = dir(atac_path)
atac_ct = unlist(strsplit(atac,'.bed.gz'))
rna@active.ident = as.factor(rna$cell_type)
atac = dir(atac_path)
atac_ct = unlist(strsplit(atac,'.bed.gz'))
ct_use = intersect(rna@active.ident,atac_ct)
ct = as.character(rna$cell_type)
unique(ct)
atac_ct
ct=gsub('CD4.M','CD4_Memory',ct)
rna[['ct']]=ct
rna@active.ident = as.factor(rna$ct)
atac = dir(atac_path)
atac_ct = unlist(strsplit(atac,'.bed.gz'))
ct_use = intersect(rna@active.ident,atac_ct)
names(atac) = atac_ct
atac = atac[names(atac) %in% ct_use]
atac_list = list()
for (i in 1:length(atac)) {
bed=read.delim(paste0(atac_path,atac[i]),header = F)
peak = paste0(bed[,1],':',bed[,2],'-',bed[,3])
atac_list[[names(atac)[i]]] = peak
}
ldsc_result <- read.delim(ldsc_path)
ct_use = intersect(colnames(ldsc_result),ct_use)
snp_all = readRDS(snp_path)
ldsc_result$X = gsub(' ','_',ldsc_result$X)
###get all disease
disease_all = dir(disease_path)
disease_all_name = as.data.frame(t(as.data.frame(strsplit(disease_all,'\\.'))))
names(disease_all) = disease_all_name[,4]
### main calculation part
grn_list04 = list()
grn_list02 = list()
snp_list = list()
for (i in 1:length(ct_use)) {
### define significant disease
disease_use = ldsc_result[,1][ldsc_result[,ct_use[i]]<0.05]
disease_use = unique(disease_use)
disease_use = intersect(disease_use,names(disease_all))
for (j in disease_use) {
rna_use = subset(rna,ct==ct_use[i])
list1 = gwas_related_features(rna_use,atac_list[[i]],
disease_name=j,
snp_all = snp_all,zscore_thr = 1)
grn04 = ct_grn_atac(list1[[2]][,1:3],
unique(list1[[1]]$symbol),
rna_use,cor_thr=0.4)
grn02 = ct_grn_atac(list1[[2]][,1:3],
unique(list1[[1]]$symbol),
rna_use,cor_thr=0.2)
grn_name = paste0(ct_use[i],'_',j)
grn_list04[[grn_name]] = grn04
grn_list02[[grn_name]] = grn02
snp_list[[grn_name]] = list1
}
}
### ldsc summary
ldsc_result = ldsc_result[!duplicated(ldsc_result[,1]),]
rownames(ldsc_result) = ldsc_result[,1]
ldsc_result = ldsc_result[,ct_use]
sig_ct_list = list()
sig_ct_vector = c()
for (i in 1:nrow(ldsc_result)) {
sig_ct = colnames(ldsc_result)[ldsc_result[i,]<0.05]
if (length(sig_ct)>0) {
sig_ct_list[[rownames(ldsc_result)[i]]] = sig_ct
sig_ct_merge = paste0(sig_ct,collapse = ';')
sig_ct_vector = c(sig_ct_vector,sig_ct_merge)
}
}
sig_ct_df = data.frame(names(sig_ct_list),sig_ct_vector)
colnames(sig_ct_df) = c('disease','related_cell_type')
write.table(sig_ct_df,paste0(output_path,'disease_related_celltypes.txt'),
quote = F,sep = '\t',row.names = F)
### disease related ccc
source('F:\\general_code\\run_cellchat.R')
ccc_plot_list = list()
ccc_list = list()
for (i in 1:length(sig_ct_list)) {
disease_name_use = names(sig_ct_list)[i]
related_ct = sig_ct_list[[i]]
if (length(related_ct)>1) {
rna_use = subset(rna,ct %in% related_ct)
ccc = run_cellchat(rna_use,rna_use@meta.data,group = 'ct',species = 'hs')
groupSize <- as.numeric(table(ccc@idents))
par(mfrow=c(1,1))
p1 = netVisual_circle(ccc@net$weight, vertex.weight = groupSize,
weight.scale = T, label.edge= F,
title.name = "",vertex.label.cex = 0.7)
print(disease_name_use)
### disease related ccc
ccc_plot_list[[i]] = p1
ccc_list[[i]] = ccc
}
}
### output ccc
names(ccc_plot_list) = names(sig_ct_list)
names(ccc_list) = names(sig_ct_list)
for (i in 1:length(ccc_plot_list)) {
name_use = names(ccc_plot_list)[i]
filenames = paste0(output_path,'ccc/',name_use,'.tiff')
filenames2 = paste0(output_path,'ccc/',name_use,'.svg')
if (!is.null(ccc_plot_list[[i]])) {
tiff(filename = filenames, width = 10000, height = 6000, units = "px", res = 1200, compression = "lzw")
print(ccc_plot_list[[i]])
dev.off()
svg(filename = filenames2, width = 4, height = 4)
print(ccc_plot_list[[i]])
dev.off()
}
}
saveRDS(ccc_list,paste0(output_path,'cellchat_ccc.rds'))
### output grn
for (i in 1:length(grn_list04)) {
name_use = names(grn_list04)[i]
out1 = grn_list04[[i]]
write.table(out1,paste0(output_path,'grn_cor04/',name_use,'.txt')
,quote = F,sep = '\t',row.names = F)
out1$type = ifelse(out1$value>0,'positive','negative')
svg(filename = filenames2, width = 4, height = 4)
print(ccc_plot_list[[i]])
dev.off()
plot_grn(out1)
}
for (i in 1:length(grn_list02)) {
name_use = names(grn_list02)[i]
out1 = grn_list02[[i]]
write.table(out1,paste0(output_path,'grn_cor02/',name_use,'.txt')
,quote = F,sep = '\t',row.names = F)
}
### output snp
for (i in 1:length(snp_list)) {
name_use = names(snp_list)[i]
list_use = snp_list[[i]]
rna_snp = list_use[[1]]
atac_snp = list_use[[2]]
write.table(rna_snp,paste0(output_path,'rna_snp/',name_use,'.txt'),
quote = F,sep = '\t',row.names = F)
write.table(atac_snp,paste0(output_path,'atac_snp/',name_use,'.txt'),
quote = F,sep = '\t',row.names = F)
}
