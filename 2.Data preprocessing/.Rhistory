setwd("E:/Db/DRCTdb/2.Data preprocessing")
library(tidyverse)
library(Matrix)
library(glue)
sample7_ATAC <- readRDS('../../data/scATAC-seq/Sample4/Sample4_peak_matrix.Rds')
sample4_ATAC <- readRDS('../../data/scATAC-seq/Sample4/Sample4_peak_matrix.Rds')
sparse_mtx <- sample4_ATAC@assays@data$PeakMatrix
rownames(sparse_mtx) <- paste(as.data.frame(sample4_ATAC@rowRanges)[[1]],as.data.frame(sample4_ATAC@rowRanges)[[2]],as.data.frame(sample4_ATAC@rowRanges)[[3]],sep = '-')
sparse_mtx <- sparse_mtx[which(map_vec(rownames(sparse_mtx),subset_peaks)),]
source('preprocess_functions.R')
sparse_mtx <- sparse_mtx[which(map_vec(rownames(sparse_mtx),subset_peaks)),]
pseudobulk <- generate_pseudobulk(sparse_mtx,group_by = sample4_ATAC$Celltype)
View(pseudobulk)
View(pseudobulk)
sample4_ATAC$Celltype
colnames(cell_gr)
colnames(cell_gr)
colnames(pseudobulk)
View(pseudobulk)
cell_gr <- tidyr::separate(as.data.frame(rownames(pseudobulk)),col = everything(),sep = '-',into = c('seqnames','start','end'))
cell_gr_list <- purrr::map(pseudobulk,function(x){
threshold <- str_extract(colnames(as.data.frame(catable(x)))[5],'\\d+') %>% as.numeric()
gr <- cell_gr[which(as.vector(x) >= threshold),] %>% GenomicRanges::makeGRangesFromDataFrame()
return(gr)
})
sample <- 'sample4'
for (i in 1:length(cell_gr_list)) {
if (!dir.exists(glue('../../data/bed/{sample}'))) {
dir.create(glue('../../data/bed/{sample}'))
}
filenames <- paste0(glue('../../data/bed/{sample}/'),names(cell_gr_list)[i],'.bed.gz')
rtracklayer::export.bed(object = cell_gr_list[[i]],con = filenames)
cat(names(cell_gr_list)[i],'\n')
}
