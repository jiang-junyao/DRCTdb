install.packages("tidyverse")
install.packages('Seurat')
library(Seurat)
install.packages("parallelly")
install.packages("Seurat")
library(Seurat)
install.packages("parallelly")
install.packages("parallelly")
library(Seurat)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Mfuzz")
library(Mfuzz)
remove.packages("SummarizedExperiment")
install.packages("C:/Users/armstrong/Desktop/SummarizedExperiment.zip", repos = NULL, type = "win.binary")
install.packages("rtracklayer")
BiocManager::install('rtracklayer')
library(rtracklayer)
rtracklayer::import(format = 'gtf')
?import
??import
'TNGGGTTGGCCTCAGAAAGGTGGAATTCTCGGGTGCCAAGGAACTCCAGTCACTAATCGATCTCGTTTGGCGTGT' |> nchar()
'taatacgactcactatagggccttctcccggagtccta'
'taatacgactcactatagggccttctcccggagtccta' |> nchar()
library(SeuratData)
devtools::install_github('satijalab/seurat-data')
df <- AvailableData()
library(SeuratData)
df <- AvailableData()
View(df)
remotes::install_github("satijalab/seurat", "seurat5", quiet = TRUE)
remove.packages("cli")
install.packages("cli")
devtools::install_github("bnprks/BPCells")
library(BPCells)
library(Seurat)
library(SeuratObject)
library(SeuratDisk)
library(Azimuth)
?save
?saveRDS
?saveRDS.Seurat
saveRDS.Seurat
saveRDS.Seurat()
SeuratObject::saveRDS()
SeuratObject::saveRDS
options(Seurat.object.assay.version = "v5")
remotes::install_github('satijalab/azimuth', ref = 'master')
BiocManager::install("batchelor")
BiocManager::install("batchelor",force = T)
BiocManager::install("batchelor",force = T)
.libPaths()
remotes::install_github('satijalab/seurat-wrappers')
remotes::install_github('satijalab/seurat-wrappers')
remotes::install_github('satijalab/seurat-wrappers')
library(SeuratWrappers)
SeuratWrappers::RunFastMNN()
shiny::runApp('C:/Users/armstrong/Desktop/flask')
?dashboardHeader
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
?dashboardHeader
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
remotes::install_github("PMBio/MuDataSeurat")
setwd("E:/Db/DRCTdb/1.Data_format_normalization")
library(Seurat)
library(Signac)
library(tidyverse)
load_matrix <- function(x){
mrtrix = paste0('../../data/scATAC-seq/Sample14/E-MTAB-10570/',x,'_matrix.mtx.gz')
feature = paste0('../../data/scATAC-seq/Sample14/E-MTAB-10570/',x,'_barcodes.tsv.gz')
cells = paste0('../../data/scATAC-seq/Sample14/E-MTAB-10570/',x,'_features.tsv.gz')
merged_matrix <- ReadMtx(mtx = mrtrix,
features = feature,
cells = cells,
feature.column = 1)
merged_matrix <- Matrix::t(merged_matrix)
chrom_assay <- CreateChromatinAssay(
counts = merged_matrix,
sep = c(":", "-"),
genome = 'hg38',
min.cells = 10,
min.features = 200
)
return(chrom_assay)
}
all_file <- unique(na.omit(str_extract(list.files('../../data/scATAC-seq/Sample14/E-MTAB-10570/'),'.*(?=_)')))
all_file
chrom_assay_list <- map(all_file,load_matrix)
library(Seurat)
library(Signac)
library(tidyverse)
chrom_assay <- reduce(chrom_assay_list,merge)
chrom_assay <- purrr::reduce(chrom_assay_list,merge)
load_matrix <- function(x){
mrtrix = paste0('../../data/scATAC-seq/Sample14/E-MTAB-10570/',x,'_matrix.mtx.gz')
feature = paste0('../../data/scATAC-seq/Sample14/E-MTAB-10570/',x,'_barcodes.tsv.gz')
cells = paste0('../../data/scATAC-seq/Sample14/E-MTAB-10570/',x,'_features.tsv.gz')
merged_matrix <- ReadMtx(mtx = mrtrix,
features = feature,
cells = cells,
feature.column = 1)
merged_matrix <- Matrix::t(merged_matrix)
colnames(merged_matrix) <- paste0(x,'#',colnames(merged_matrix))
chrom_assay <- CreateChromatinAssay(
counts = merged_matrix,
sep = c(":", "-"),
genome = 'hg38',
min.cells = 10,
min.features = 200
)
return(chrom_assay)
}
all_file <- unique(na.omit(str_extract(list.files('../../data/scATAC-seq/Sample14/E-MTAB-10570/'),'.*(?=_)')))
chrom_assay_list <- map(all_file,load_matrix)
chrom_assay <- purrr::reduce(chrom_assay_list,merge)
sample14 <- CreateSeuratObject(
counts = chrom_assay,
assay = "peaks"
)
saveRDS(sample14,'../../data/scATAC-seq/Sample14/peak_matrix.Rds')
sample14
colnames(sample14)
metadata <- read('../../data/scATAC-seq/Sample14/atac_metadata.csv')
metadata <- data.table::fread('../../data/scATAC-seq/Sample14/atac_metadata.csv')
View(chrom_assay_list)
View(metadata)
str_extract(metadata$V1)
str_extract(metadata$V1,'\\w')
str_extract(metadata$V1,'[A-Z]+')
medadata2 <- data.frame(
barcode = paste0(str_extract(metadata$V1,'[A-Z]+'),'-1'),
celltype = metadata$V6
)
View(medadata2)
metadata <- data.table::fread('../../data/scATAC-seq/Sample14/atac_metadata.csv',header = T)
medadata2 <- data.frame(
barcode = paste0(str_extract(metadata$V1,'[A-Z]+'),'-1'),
celltype = metadata$V6
)
medadata2 <- data.frame(
barcode = paste0(str_extract(metadata$V1,'[A-Z]+'),'-1'),
cell_type = metadata$cell_type
)
View(medadata2)
medadata2 <- data.frame(
barcode = paste0(metadata$sample,'#',str_extract(metadata$V1,'[A-Z]+'),'-1'),
cell_type = metadata$cell_type
)
View(medadata2)
intersect(medadata2$barcode,colnames(medadata2))
intersect(medadata2$barcode,colnames(sample14\))
intersect(medadata2$barcode,colnames(sample14))
intersect(medadata2$barcode,colnames(sample14)) |> length()
rownames(medadata2) <- medadata2$barcode
View(medadata2)
medadata2
sample14
colnames(sample14) %in% metadata2
metadata <- data.table::fread('../../data/scATAC-seq/Sample14/atac_metadata.csv',header = T)
metadata <- data.frame(
barcode = paste0(metadata$sample,'#',str_extract(metadata$V1,'[A-Z]+'),'-1'),
cell_type = metadata$cell_type
)
metadata <- data.table::fread('../../data/scATAC-seq/Sample14/atac_metadata.csv',header = T)
metadata2 <- data.frame(
barcode = paste0(metadata$sample,'#',str_extract(metadata$V1,'[A-Z]+'),'-1'),
cell_type = metadata$cell_type
)
rownames(metadata) <- metadata$barcode
table(colnames(sample14) %in% metadata2)
table(colnames(sample14) %in% metadata2$barcode)
intersect(colnames(sample14),metadata2$barcode)
cells <- intersect(colnames(sample14),metadata2$barcode)
sample14_2 <- subset(sample14,cells = cells)
rownames(metadata2) <- metadata2$barcode
metadata2 <- metadata2[cells,]
identical(colnames(sample14_2),rownames(metadata2))
sample14_2 <- AddMetaData(sample14_2,metadata = metadata2)
saveRDS(sample14,'../../data/scATAC-seq/Sample14/sample14.Rds')
setwd("E:/Db/DRCTdb/2.Data preprocessing")
library(Signac)
library(Seurat)
library(tidyverse)
library(Matrix)
library(glue)
sample14_ATAC <- readRDS('../../data/scATAC-seq/sample14/sample14.Rds')
sparse_mtx <- sample1_ATAC@assays$peaks@counts
sparse_mtx <- sample14_ATAC@assays$peaks@counts
sparse_mtx <- sparse_mtx[str_starts(rownames(sparse_mtx),'chr'),]
rownames(sparse_mtx)[1:10]
cell_gr <- separate(as.data.frame(rownames(pseudobulk)),col = everything(),sep = '-',into = c('seqnames','start','end'))
pseudobulk <- generate_pseudobulk(sparse_mtx,group_by = sample14_ATAC$cell_type)
source('preprocess_functions.R')
pseudobulk <- generate_pseudobulk(sparse_mtx,group_by = sample14_ATAC$cell_type)
sparse_mtx <- sample14_2@assays$peaks@counts
sparse_mtx <- sparse_mtx[str_starts(rownames(sparse_mtx),'chr'),]
pseudobulk <- generate_pseudobulk(sparse_mtx,group_by = sample14_2$cell_type)
cell_gr <- separate(as.data.frame(rownames(pseudobulk)),col = everything(),sep = '-',into = c('seqnames','start','end'))
cell_gr_list <- map(colnames(pseudobulk),get_cell_gr,seurat_Obj = sample14_2)
names(cell_gr_list) <- colnames(pseudobulk)
cell_gr_list
sample <- 'sample14'
for (i in 1:length(cell_gr_list)) {
if (!dir.exists(glue('../../data/bed/{sample}'))) {
dir.create(glue('../../data/bed/{sample}'))
}
filenames <- paste0(glue('../../data/bed/{sample}/'),names(cell_gr_list)[i],'.bed.gz')
rtracklayer::export.bed(object = cell_gr_list[[i]],con = filenames)
cat(names(cell_gr_list)[i],'\n')
}
saveRDS(sample14_2,'../../data/scATAC-seq/Sample14/sample14_processed_95k_scATAC.Rds')
