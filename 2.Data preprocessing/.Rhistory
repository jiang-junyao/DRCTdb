install.packages("tidyverse")
install.packages('Seurat')
library(Seurat)
install.packages("parallelly")
install.packages("Seurat")
library(Seurat)
install.packages("parallelly")
install.packages("parallelly")
library(Seurat)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Mfuzz")
library(Mfuzz)
remove.packages("SummarizedExperiment")
install.packages("C:/Users/armstrong/Desktop/SummarizedExperiment.zip", repos = NULL, type = "win.binary")
install.packages("rtracklayer")
BiocManager::install('rtracklayer')
library(rtracklayer)
rtracklayer::import(format = 'gtf')
?import
??import
'TNGGGTTGGCCTCAGAAAGGTGGAATTCTCGGGTGCCAAGGAACTCCAGTCACTAATCGATCTCGTTTGGCGTGT' |> nchar()
'taatacgactcactatagggccttctcccggagtccta'
'taatacgactcactatagggccttctcccggagtccta' |> nchar()
library(SeuratData)
devtools::install_github('satijalab/seurat-data')
df <- AvailableData()
library(SeuratData)
df <- AvailableData()
View(df)
remotes::install_github("satijalab/seurat", "seurat5", quiet = TRUE)
remove.packages("cli")
install.packages("cli")
devtools::install_github("bnprks/BPCells")
library(BPCells)
library(Seurat)
library(SeuratObject)
library(SeuratDisk)
library(Azimuth)
?save
?saveRDS
?saveRDS.Seurat
saveRDS.Seurat
saveRDS.Seurat()
SeuratObject::saveRDS()
SeuratObject::saveRDS
options(Seurat.object.assay.version = "v5")
remotes::install_github('satijalab/azimuth', ref = 'master')
BiocManager::install("batchelor")
BiocManager::install("batchelor",force = T)
BiocManager::install("batchelor",force = T)
.libPaths()
remotes::install_github('satijalab/seurat-wrappers')
remotes::install_github('satijalab/seurat-wrappers')
remotes::install_github('satijalab/seurat-wrappers')
library(SeuratWrappers)
SeuratWrappers::RunFastMNN()
shiny::runApp('C:/Users/armstrong/Desktop/flask')
?dashboardHeader
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
?dashboardHeader
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
runApp('C:/Users/armstrong/Desktop/flask')
library(Signac)
library(Seurat)
library(tidyverse)
library(Matrix)
library(glue)
source('preprocess_functions.R')
setwd("E:/Db/DRCTdb/2.Data preprocessing")
source('preprocess_functions.R')
sample8_ATAC <- readRDS('../../data/scATAC-seq/Sample8/sample8_peak_matrix.Rds')
source('preprocess_functions.R')
sparse_mtx <- sample8_ATAC@assays@data$PeakMatrix
rownames(sparse_mtx) <- paste(as.data.frame(sample8_ATAC@rowRanges)[[1]],as.data.frame(sample8_ATAC@rowRanges)[[2]],as.data.frame(sample8_ATAC@rowRanges)[[3]],sep = '-')
sparse_mtx
colnames(sparse_mtx)
metadata <- read.csv('../../data/scATAC-seq/Sample8/atac_barcodes.csv')
View(metadata)
colnames(sparse_mtx) |> length()
str_which(colnames(sparse_mtx),metadata$barcode[1])
colnames(sparse_mtx)[str_which(colnames(sparse_mtx),metadata$barcode[1])]
str_extract(colnames(sparse_mtx),'.*(?=#)')
str_extract(colnames(sparse_mtx),'(?<=#).*')
str_extract(colnames(sparse_mtx),'(?<=#).*') %in% metadata$barcode
table(str_extract(colnames(sparse_mtx),'(?<=#).*') %in% metadata$barcode)
metadata$barcode
table(str_extract(colnames(sparse_mtx),'(?<=#)[A-Z]+') %in% metadata$barcode)
sparse_mtx
sparse_mtx <- sparse_mtx[,which(str_extract(colnames(sparse_mtx),'(?<=#)[A-Z]+') %in% metadata$barcode)]
ncol(sparse_mtx)
sparse_mtx <- sparse_mtx[which(map_vec(rownames(sparse_mtx),subset_peaks)),]
colnames(metadata)
get_celltype(colnames(sparse_mtx)[1])
get_celltype <- function(x){
res <- metadatap[str_which(metadata$barcode,x),]$celltype
if (length(res) >= 1) {
res <- unique(res)
}
}
get_celltype(colnames(sparse_mtx)[1])
get_celltype <- function(x){
res <- metadata[str_which(metadata$barcode,x),]$celltype
if (length(res) >= 1) {
res <- unique(res)
}
}
get_celltype(colnames(sparse_mtx)[1])
get_celltype <- function(x){
res <- metadata[str_which(metadata$barcode,x),]$celltype
if (length(res) >= 1) {
res <- unique(res)
}
return(res)
}
get_celltype(colnames(sparse_mtx)[1])
get_celltype <- function(x){
res <- metadata[str_which(metadata$barcode,x),]$celltype
if (length(res) >= 1) {
res <- unique(res)
}else if(length(res) ==0 ){
res <- NA
}
return(res)
}
get_celltype(colnames(sparse_mtx)[1])
map(colnames(sparse_mtx),get_celltype)
map(colnames(sparse_mtx)[1:1000],get_celltype)
test <- map(colnames(sparse_mtx)[1:100],get_celltype)
test
str_extract(colnames(sparse_mtx),'(?<=#)[A-Z]+')
test <- map(str_extract(colnames(sparse_mtx),'(?<=#)[A-Z]+')[1:100],get_celltype)
test
get_celltype <- function(x){
res <- metadata[str_which(metadata$barcode,x),]$celltype
if (length(res) >= 1) {
res <- unique(res)
if (length(res) >= 1) {
res <- res[1]
}
}else if(length(res) ==0 ){
res <- NA
}
return(res)
}
test <- map(str_extract(colnames(sparse_mtx),'(?<=#)[A-Z]+')[1:100],get_celltype)
test
cell_type_list <- map(str_extract(colnames(sparse_mtx),'(?<=#)[A-Z]+')[1:100],get_celltype)
cell_type_list <- map(str_extract(colnames(sparse_mtx),'(?<=#)[A-Z]+'),get_celltype)
cell_type_list
cell_type <- unlist(cell_type_list)
pseudobulk <- generate_pseudobulk(sparse_mtx,group_by = sample7_ATAC$cell_type)
pseudobulk <- generate_pseudobulk(sparse_mtx,group_by = cell_type)
View(pseudobulk)
get_celltype <- function(x){
res <- metadata[str_which(metadata$barcode,x),]$celltype
if (length(res) >= 1) {
res <- unique(res)
if (length(res) >= 1) {
res <- 'Unknown'
}
}else if(length(res) ==0 ){
res <- 'Unknown'
}
return(res)
}
cell_type_list <- map(str_extract(colnames(sparse_mtx),'(?<=#)[A-Z]+'),get_celltype)
cell_type <- unlist(cell_type_list)
pseudobulk <- generate_pseudobulk(sparse_mtx,group_by = cell_type)
pseudobulk <- generate_pseudobulk(sparse_mtx,group_by = cell_type)
cell_gr <- tidyr::separate(as.data.frame(rownames(pseudobulk)),col = everything(),sep = '-',into = c('seqnames','start','end'))
cell_gr_list <- map(colnames(pseudobulk),get_cell_gr,seurat_Obj = sample7_ATAC)
View(cell_gr)
colnames(pseudobulk)
View(pseudobulk)
get_celltype <- function(x){
res <- metadata[str_which(metadata$barcode,x),]$celltype
if (length(res) > 1) {
res <- unique(res)
if (length(res) > 1) {
res <- 'Unknown'
}
}else if(length(res) ==0 ){
res <- 'Unknown'
}
return(res)
}
library(Signac)
library(Seurat)
library(tidyverse)
library(Matrix)
library(glue)
source('preprocess_functions.R')
sample8_ATAC <- readRDS('../../data/scATAC-seq/Sample8/sample8_peak_matrix.Rds')
sparse_mtx <- sample8_ATAC@assays@data$PeakMatrix
rownames(sparse_mtx) <- paste(as.data.frame(sample8_ATAC@rowRanges)[[1]],as.data.frame(sample8_ATAC@rowRanges)[[2]],as.data.frame(sample8_ATAC@rowRanges)[[3]],sep = '-')
metadata <- read.csv('../../data/scATAC-seq/Sample8/atac_barcodes.csv')
get_celltype <- function(x){
res <- metadata[str_which(metadata$barcode,x),]$celltype
if (length(res) > 1) {
res <- unique(res)
if (length(res) > 1) {
res <- 'Unknown'
}
}else if(length(res) ==0 ){
res <- 'Unknown'
}
return(res)
}
cell_type_list <- map(str_extract(colnames(sparse_mtx),'(?<=#)[A-Z]+'),get_celltype)
cell_type <- unlist(cell_type_list)
sample8_ATAC$cell_type <- cell_type
table(sample8_ATAC$cell_type)
pseudobulk <- generate_pseudobulk(sparse_mtx,group_by = sample8_ATAC$cell_type)
cell_gr <- tidyr::separate(as.data.frame(rownames(pseudobulk)),col = everything(),sep = '-',into = c('seqnames','start','end'))
cell_gr_list <- map(colnames(pseudobulk),get_cell_gr,seurat_Obj = sample8_ATAC)
names(cell_gr_list) <- colnames(pseudobulk)
sample <- 'sample8'
View(cell_gr_list)
for (i in 1:length(cell_gr_list)) {
if (!dir.exists(glue('../../data/bed/{sample}'))) {
dir.create(glue('../../data/bed/{sample}'))
}
filenames <- paste0(glue('../../data/bed/{sample}/'),names(cell_gr_list)[i],'.bed.gz')
rtracklayer::export.bed(object = cell_gr_list[[i]],con = filenames)
cat(names(cell_gr_list)[i],'\n')
}
sample10_ATAC <- readRDS('../../data/scATAC-seq/Sample10/sample10_peak_matrix.Rds')
source('preprocess_functions.R')
sample10_ATAC <- readRDS('../../data/scATAC-seq/Sample10/sample10_peak_matrix.Rds')
sample10_ATAC$cell_type
library(Signac)
library(Seurat)
library(tidyverse)
library(Matrix)
library(glue)
source('preprocess_functions.R')
sample10_ATAC <- readRDS('../../data/scATAC-seq/Sample10/sample10_peak_matrix.Rds')
sparse_mtx <- sample10_ATAC@assays@data$PeakMatrix
rownames(sparse_mtx) <- paste(as.data.frame(sample10_ATAC@rowRanges)[[1]],as.data.frame(sample10_ATAC@rowRanges)[[2]],as.data.frame(sample10_ATAC@rowRanges)[[3]],sep = '-')
metadata <- read.csv('../../data/scATAC-seq/sample10/atac_barcodes.csv')
rownames(sparse_mtx) <- paste(as.data.frame(sample10_ATAC@rowRanges)[[1]],as.data.frame(sample10_ATAC@rowRanges)[[2]],as.data.frame(sample10_ATAC@rowRanges)[[3]],sep = '-')
sparse_mtx <- sparse_mtx[which(map_vec(rownames(sparse_mtx),subset_peaks)),]
pseudobulk <- generate_pseudobulk(sparse_mtx,group_by = sample10_ATAC$cell_type)
cell_gr <- tidyr::separate(as.data.frame(rownames(pseudobulk)),col = everything(),sep = '-',into = c('seqnames','start','end'))
cell_gr_list <- map(colnames(pseudobulk),get_cell_gr,seurat_Obj = sample10_ATAC)
names(cell_gr_list) <- colnames(pseudobulk)
View(cell_gr_list)
sample <- 'sample10'
for (i in 1:length(cell_gr_list)) {
if (!dir.exists(glue('../../data/bed/{sample}'))) {
dir.create(glue('../../data/bed/{sample}'))
}
filenames <- paste0(glue('../../data/bed/{sample}/'),names(cell_gr_list)[i],'.bed.gz')
rtracklayer::export.bed(object = cell_gr_list[[i]],con = filenames)
cat(names(cell_gr_list)[i],'\n')
}
setwd("E:/Db/DRCTdb/2.Data preprocessing")
for (i in 1:length(cell_gr_list)) {
if (!dir.exists(glue('../../data/bed/{sample}'))) {
dir.create(glue('../../data/bed/{sample}'))
}
filenames <- paste0(glue('../../data/bed/{sample}/'),names(cell_gr_list)[i],'.bed.gz')
rtracklayer::export.bed(object = cell_gr_list[[i]],con = filenames)
cat(names(cell_gr_list)[i],'\n')
}
View(cell_gr_list)
View(pseudobulk)
cell_gr <- tidyr::separate(as.data.frame(rownames(pseudobulk)),col = everything(),sep = '-',into = c('seqnames','start','end'))
